{
  "name": "Media Picker",
  "tagline": "Media Picker is an Android Libary that lets you to select multiple images, video or voice for Android.",
  "body": "<p align=\"left\">\r\n  <img src=\"https://cloud.githubusercontent.com/assets/4659608/12700433/4276edc0-c7f3-11e5-9f2c-de6bcbb9416d.png\" width=\"600\">\r\n</p>\r\n# Media Picker\r\n![](https://img.shields.io/badge/Platform-Android-brightgreen.svg)\r\n![](https://img.shields.io/crates/l/rustc-serialize.svg)\r\n![](https://img.shields.io/badge/version-2.1.1-blue.svg)\r\n\r\n------ \r\nMedia Picker is an Android Libary that lets you to select multiple images, video or voice for Android 4.1 (API 16) +.\r\nYou can report any issue on issues page. **Note: If you speak Arabic, you can submit issues with Arabic language and I will check them. :)**\r\n\r\n# NOTE\r\n----\r\nThis build `2.x.x` will break backward compatibility and there are a lot of changes to improve the performance and fix a lot of Leak memory issues, So please read below document carefully.\r\n## Installation\r\n------ \r\n**Maven**\r\n```xml\r\n<dependency>\r\n<groupId>net.alhazmy13.MediaPicker</groupId>\r\n<artifactId>libary</artifactId>\r\n<version>2.1.1</version>\r\n</dependency>\r\n```\r\n\r\n\r\n**Gradle**\r\n```gradle\r\ndependencies {\r\n\tcompile 'net.alhazmy13.MediaPicker:libary:2.1.1'\r\n}\r\n```\r\n\r\n# Usage\r\n------ \r\n## Images\r\nAfter adding the library, you need to:\r\n\r\n1. Create an object from `ImagePicker`\r\n2. Override `onActivityResult` to receive the path of image.\r\n\r\n\r\n\r\n### Create an `ImagePicker`\r\nYou will need to create a new instance of `ImagePicker`. Once the instance are configured, you can call `build()`.\r\n\r\n```java\r\n        new ImagePicker.Builder(this)\r\n                .build();\r\n```\r\n### Override `onActivityResult `\r\nIn order to receive the path of image, you will need to override `onActivityResult ` .\r\n\r\n```java\r\n   @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == ImagePicker.IMAGE_PICKER_REQUEST_CODE && resultCode == RESULT_OK) {\r\n            String mPath = data.getStringExtra(ImagePicker.EXTRA_IMAGE_PATH);\r\n            //Your Code\r\n        }\r\n    }\r\n```\r\n\r\n### Additional Options\r\n* `mode` to select the mode, you can chose one ot these `CAMERA`,`GALLERY` or `CAMERA_AND_GALLERY`\r\n\r\n```java\r\n.mode(ImagePicker.Mode.CAMERA)\r\n```\r\n \r\n* `extension` You can change the extanion of image to `PNG` or `JPG`\r\n\r\n```java\r\n.extension(ImagePicker.Extension.PNG)\r\n```\r\n* `compressLevel` You can change the quality of image with three different levels `HARD`,`MEDIUM`, `SOFT` or `NONE`\r\n\r\n```java\r\n.compressLevel(ImagePicker.ComperesLevel.MEDIUM)\r\n```\r\n\r\n* `directory` You can pass the storage path, or select `Directory.DEFAULT_DIR` to keep the default path.\r\n\r\n```java\r\n.directory(ImagePicker.Directory.DEFAULT)\r\n\r\n//OR\r\n\r\n.directory(Environment.getExternalStorageDirectory()+\"/myFolder\")\r\n\r\n```\r\n------ \r\n\r\n## Video\r\n------ \r\n\r\n1. Create an object from `VideoPicker`\r\n2. Override `onActivityResult` to receive the path of video.\r\n\r\n\r\n\r\n### Create `VideoPicker`\r\nYou will need to create a new instance of `VideoPicker`. Once the instance are configured, you can call `build()`.\r\n\r\n```java\r\n        new VideoPicker.Builder(this)\r\n                .build();\r\n```\r\n### Override `onActivityResult `\r\nIn order to receive the path of video, you will need to override `onActivityResult ` .\r\n\r\n```java\r\n   @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == VideoPicker.VIDEO_PICKER_REQUEST_CODE && resultCode == RESULT_OK) {\r\n            String mPath = data.getStringExtra(VideoPicker.EXTRA_VIDEO_PATH);\r\n            //Your Code\r\n        }\r\n    }\r\n```\r\n\r\n### Additional Options\r\n* `mode` to select the mode, you can chose one ot these `CAMERA`,`GALLERY` or `CAMERA_AND_GALLERY`\r\n\r\n```java\r\n.mode(VideoPicker.Mode.CAMERA)\r\n```\r\n \r\n* `extension` You can change the extanion of image to `_MP4` , `_MKV` or `_3GP`\r\n\r\n```java\r\n.extension(VideoPicker.Extension._MP4)\r\n```\r\n\r\n* `directory` You can pass the storage path, or select `Directory.DEFAULT_DIR` to keep the default path.\r\n\r\n```java\r\n.directory(VideoPicker.Directory.DEFAULT)\r\n\r\n//OR\r\n\r\n.directory(Environment.getExternalStorageDirectory()+\"/myFolder\")\r\n\r\n```\r\n\r\n\r\n## Theme the pickers\r\n\r\nYou can change the strings be overwriting below resources in your project.\r\n\r\n```xml\r\n\r\n    <string name=\"media_picker_select_from\">Select From:</string>\r\n    <string name=\"media_picker_camera\">Camera</string>\r\n    <string name=\"media_picker_gallery\">Gallery</string>\r\n    <string name=\"media_picker_ok\">Ok</string>\r\n    <string name=\"media_picker_cancel\">Cancel</string>\r\n    <string name=\"media_picker_some_permission_is_denied\">Some Permission is Denied</string>\r\n    <string name=\"media_picker_you_need_to_grant_access_to\">You need to grant access to</string>\r\n    <string name=\"media_picker_read_Write_external_storage\"><![CDATA[Read & Write External Storage]]></string>\r\n```\r\n\r\n\r\n\r\n## License\r\n------ \r\n    Copyright 2015 alhazmy\r\n\r\n    Licensed under the Apache License, Version 2.0 (the \"License\");\r\n    you may not use this file except in compliance with the License.\r\n    You may obtain a copy of the License at\r\n\r\n       http://www.apache.org/licenses/LICENSE-2.0\r\n\r\n    Unless required by applicable law or agreed to in writing, software\r\n    distributed under the License is distributed on an \"AS IS\" BASIS,\r\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n    See the License for the specific language governing permissions and\r\n    limitations under the License.\r\n    \r\n\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}