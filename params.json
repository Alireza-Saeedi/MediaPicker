{
  "name": "Media Picker - AR",
  "tagline": "Media Picker is an Android Libary that lets you to select multiple images, video or voice for Android.",
  "body": "<p align=\"left\">\r\n  <img src=\"https://cloud.githubusercontent.com/assets/4659608/12700433/4276edc0-c7f3-11e5-9f2c-de6bcbb9416d.png\" width=\"600\">\r\n</p>\r\n# Media Picker\r\n![](https://img.shields.io/badge/Platform-Android-brightgreen.svg)\r\n![](https://img.shields.io/crates/l/rustc-serialize.svg)\r\n![](https://img.shields.io/badge/version-2.1.1-blue.svg)\r\n\r\n------ \r\nاذا كنت مطور اندرويد واردت التعامل مع الكاميرا سواء كان لالتقاط الصور او تسجيل مقطع فيديو او حتى اذا اردت استيراد صورة من الاستديو الخاص بالجهاز, فربما واجهتك مشكلة في تنفيد الكود الخاص بهذ الامر, لذلك تسهيلاً لعملية التواصل مع الوسائط بشكل عام او الكاميرا بشكل خاص وجدت هذه المكتبة.\r\n\r\nهذه المكتبة توفر لك عناء كتابة الاكواد فلا حاجة لاستدعاء الـ Intent الخاص بالكاميرا او كتابة الاكواد الخاصة بتخزين الصور على ذاكرة الجهاز او اضافة الاوامر الخاصة بصلاحيات الكاميرا وذاكرة التخزين, فمن خلال بعض الاسطر البسيطة تستطيع الوصول للكاميرا والتقاط الصور ومن ثم تقوم المتكبة بارجاع الرابط الخاص بالصورة.\r\n\r\n\r\n## التثبيت\r\n------ \r\n**Maven**\r\n```xml\r\n<dependency>\r\n<groupId>net.alhazmy13.MediaPicker</groupId>\r\n<artifactId>libary</artifactId>\r\n<version>2.1.1</version>\r\n</dependency>\r\n```\r\n\r\n\r\n**Gradle**\r\n```gradle\r\ndependencies {\r\n\tcompile 'net.alhazmy13.MediaPicker:libary:2.1.1'\r\n}\r\n```\r\n\r\n# الاستخدام\r\n------ \r\n<p dir=\"rtl\">بعد اضافتك للمكتبة كل ما عليك عمله هو التالي:</p>\r\n\r\n<ol dir=\"rtl\">\r\n<li>انشاء Object من كلاس <code>ImagePicker</code></li>\r\n<li>عمل Override لميثود <code>onActivityResult</code> لاستقبال مسار الصور الملتقطة من الكاميرا او الاستديو.</li>\r\n</ol>\r\n\r\n<h3 dir=\"rtl\" id=\"انشاءobjectمنكلاسimagepicker\">انشاء Object من كلاس <code>ImagePicker</code></h3>\r\n\r\n<p dir=\"rtl\">تستطيع انشاء instance جديد من كلاس <code>ImagePicker</code> عن طريق الـ <code>Builder</code> ومن ثم تمرير جميع الخصائص التي تحتاجها وعند الانتهاء استدعي الميثود <code>build()</code> .</p>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">        new ImagePicker.Builder(MainActivity.this)\r\n                        .mode(ImagePicker.Mode.CAMERA_AND_GALLERY)\r\n                        .compressLevel(ImagePicker.ComperesLevel.MEDIUM)\r\n                        .directory(ImagePicker.Directory.DEFAULT)\r\n                        .extension(ImagePicker.Extension.PNG)\r\n                        .scale(600, 600)\r\n                        .allowMultipleImages(false)\r\n                        .enableDebuggingMode(true)\r\n                        .build();\r\n</code></pre>\r\n\r\n<h3 dir=\"rtl\" id=\"overrideonactivityresult\">Override <code>onActivityResult</code></h3>\r\n\r\n<p dir=\"rtl\">لاستقبال مسار الصور الملتقطة من الاستديو او الكاميرا يجب عليك عمل Override لميثود <code>onActivityResult</code>\r\n.</p>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">   @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == ImagePicker.IMAGE_PICKER_REQUEST_CODE &amp;&amp; resultCode == RESULT_OK) {\r\n            List&lt;String&gt; mPaths = (List&lt;String&gt;) data.getSerializableExtra(ImagePicker.EXTRA_IMAGE_PATH);\r\n            //Your Code\r\n        }\r\n    }\r\n</code></pre>\r\n\r\n\r\n<h2 dir=\"rtl\" id=\"فيالاسفليوجدبعضالخصائصالتيتستطيعاستخدامهامعكلاسimagepicker\">في الاسفل يوجد بعض الخصائص التي تستطيع استخدامها مع كلاس <code>ImagePicker</code></h2>\r\n\r\n<ul dir=\"rtl\">\r\n<li><code>mode</code> لتغير اسلوب التقاط الصور سواء كانت من الكاميرا فقط او الاستديو فقط او الاثنين <code>CAMERA</code>,<code>GALLERY</code> or <code>CAMERA_AND_GALLERY</code></li>\r\n</ul>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">.mode(ImagePicker.Mode.CAMERA)\r\n</code></pre>\r\n\r\n<ul dir=\"rtl\">\r\n<li><code>extension</code> لتغير امتداد الصورة سواء كانت <code>PNG</code> او <code>JPG</code></li>\r\n</ul>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">.extension(ImagePicker.Extension.PNG)\r\n</code></pre>\r\n\r\n<ul dir=\"rtl\">\r\n<li><code>compressLevel</code> من خلال هذا الامر تستطيع تغير درجة ضغط الصورة مع ملاحظة ان كل مازادت درجة الضغط ستقل جودة الصورة وسيقل حجمها ايضا <code>HARD</code>,<code>MEDIUM</code>, <code>SOFT</code> or <code>NONE</code></li>\r\n</ul>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">.compressLevel(ImagePicker.ComperesLevel.MEDIUM)\r\n</code></pre>\r\n\r\n<ul dir=\"rtl\">\r\n<li><code>directory</code> تستطيع تغير مسار حفظ الصور الى المسار الذي تريده او تستطيع تمرير <code>Directory.DEFAULT_DIR</code> لحفظ الصور في المسار الافتراضي للمكتبة.</li>\r\n</ul>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">.directory(ImagePicker.Directory.DEFAULT)\r\n</code></pre>\r\n\r\n<p dir=\"rtl\"><strong>أو</strong>\r\n<code>java\r\n.directory(Environment.getExternalStorageDirectory()+&quot;/myFolder&quot;)\r\n</code></p>\r\n\r\n<ul dir=\"rtl\">\r\n<li><code>scale</code> من خلال هذا الامر تستطيع تغير طول وعرض الصورة مع ملاحظة ان هذا الخيار لايعمل الا في حالة تغيرك لدرجة ضغط الصورة.</li>\r\n</ul>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">.scale(500, 500)\r\n</code></pre>\r\n\r\n<ul dir=\"rtl\">\r\n<li><code>allowMultipleImages</code> من خلال هذا الامر يستطيع المستخدم اختيار اكثر من صورة من الاستديو.</li>\r\n</ul>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">    .allowMultipleImages(true)\r\n</code></pre>\r\n\r\n<ul dir=\"rtl\">\r\n<li><code>enableDebuggingMode</code> يستخدم لطباعة الـ Log الخاص بالمكتبة</li>\r\n</ul>\r\n\r\n<pre dir=\"ltr\"><code class=\"java\">    .enableDebuggingMode(true)\r\n</code></pre>\r\n\r\n\r\n#دعم RxJava مع الصور\r\n\r\n<p dir=\"rtl\">اضافة لمكتبة MediaPicker تسمح لك باستقبال <code>observable</code> من <code>ImagePickerBuilder</code> بدلا من استقبال مسار الصور عن طريق <code>OnActivityResult</code> . </p>\r\n\r\n<p dir=\"rtl\">لإستخدام اضافة RxJava يجب عليك تضمين <code>MediaPicker:rxjava</code> من خلال الـ <code>dependency</code> ومن ثم استقبال الـ <code>observable</code> من خلال كلاس <code>ImagePickerHelper</code></p>\r\n\r\n<p dir=\"rtl\"><strong>Gradle</strong></p>\r\n\r\n<pre dir=\"ltr\"><code class=\"gradle\">dependencies {\r\n    compile 'net.alhazmy13.MediaPicker:rxjava:(Last_version)'\r\n}\r\n</code></pre>\r\n\r\n<pre dir=\"ltr\"><code class=\"Java\">  new ImagePickerHelper(\r\n        new ImagePicker.Builder(Context)\r\n                ...)\r\n                .getObservable()\r\n                .subscribe(new Subscriber&lt;List&lt;String&gt;&gt;() {\r\n                    @Override\r\n                    public void onCompleted() {\r\n                        Log.d(TAG, &quot;onCompleted() called with: &quot; + &quot;&quot;);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onError(Throwable e) {\r\n                        Log.d(TAG, &quot;onError()&quot;);\r\n                    }\r\n\r\n                    @Override\r\n                    public void onNext(List&lt;String&gt; imagePaths) {\r\n                        Log.d(TAG, &quot;onNext() &quot;);\r\n                    }\r\n                });\r\n</code></pre>\r\n\r\n#تعديل التصميم\r\nYou can change the strings be overwriting below resources in your project.\r\n\r\n```xml\r\n\r\n    <string name=\"media_picker_select_from\">Select From:</string>\r\n    <string name=\"media_picker_camera\">Camera</string>\r\n    <string name=\"media_picker_gallery\">Gallery</string>\r\n    <string name=\"media_picker_ok\">Ok</string>\r\n    <string name=\"media_picker_cancel\">Cancel</string>\r\n    <string name=\"media_picker_some_permission_is_denied\">Some Permission is Denied</string>\r\n    <string name=\"media_picker_you_need_to_grant_access_to\">You need to grant access to</string>\r\n    <string name=\"media_picker_read_Write_external_storage\"><![CDATA[Read & Write External Storage]]></string>\r\n```\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}